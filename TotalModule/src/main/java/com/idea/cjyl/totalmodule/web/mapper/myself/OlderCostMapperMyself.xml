<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idea.cjyl.totalmodule.web.dao.myself.OlderCostMapperMyself">


            <resultMap id="OlderOlderCostVO" type="com.idea.cjyl.totalmodule.web.domain.pojo.Older">
                <id column="older_id" property="id" jdbcType="BIGINT"/>
                <result column="older_name" property="name" jdbcType="VARCHAR"/>
                <result column="older_principal_disease" property="principalDisease" jdbcType="VARCHAR"/>
                <result column="older_indication_hospital" property="indicationHospital" jdbcType="VARCHAR"/>
                <result column="older_census_register" property="censusRegister" jdbcType="VARCHAR"/>
                <result column="older_diseases_history" property="diseasesHistory" jdbcType="VARCHAR"/>
                <result column="older_take_care_of_oneself" property="takeCareOfOneself" jdbcType="BIGINT"/>
                <result column="older_self_ingredient" property="selfIngredient" jdbcType="BIGINT"/>
                <result column="older_abnormal_patterns" property="abnormalPatterns" jdbcType="VARCHAR"/>
                <result column="older_politics_status" property="politicsStatus" jdbcType="BIGINT"/>
                <result column="older_indication_doctor" property="indicationDoctor" jdbcType="VARCHAR"/>
                <result column="older_special_requirements" property="specialRequirements" jdbcType="VARCHAR"/>
                <result column="older_older_leave_date" property="olderLeaveDate" jdbcType="TIMESTAMP"/>
                <result column="older_diet_characteristics" property="dietCharacteristics" jdbcType="VARCHAR"/>
                <result column="older_organization_login_id" property="organizationLoginId" jdbcType="BIGINT"/>
                <result column="older_card_id" property="cardId" jdbcType="VARCHAR"/>
                <result column="older_blood_pressure" property="bloodPressure" jdbcType="VARCHAR"/>
                <result column="older_sex" property="sex" jdbcType="BIGINT"/>
                <result column="older_check_in_date" property="checkInDate" jdbcType="TIMESTAMP"/>
                <result column="older_month_charge_id" property="monthChargeId" jdbcType="BIGINT"/>
                <result column="older_tel" property="tel" jdbcType="VARCHAR"/>
                <result column="older_birthday" property="birthday" jdbcType="TIMESTAMP"/>
                <result column="older_belief" property="belief" jdbcType="BIGINT"/>
                <result column="older_nation" property="nation" jdbcType="BIGINT"/>
                <result column="older_mind" property="mind" jdbcType="BIGINT"/>
                <result column="older_pluse" property="pluse" jdbcType="VARCHAR"/>
                <result column="older_older_state" property="olderState" jdbcType="TINYINT"/>
                <result column="older_hospital_tel" property="hospitalTel" jdbcType="VARCHAR"/>
                <result column="older_staff_id" property="staffId" jdbcType="BIGINT"/>
                <result column="older_allergic_drug" property="allergicDrug" jdbcType="VARCHAR"/>
                <result column="older_disposition" property="disposition" jdbcType="VARCHAR"/>
                <result column="older_hobby" property="hobby" jdbcType="VARCHAR"/>
             </resultMap>


            <resultMap id="ServiceChargeOlderCostVO" type="com.idea.cjyl.totalmodule.web.domain.pojo.ServiceCharge">
                <id column="service_charge_id" property="id" jdbcType="BIGINT"/>
                <result column="service_charge_organization_login_id" property="organizationLoginId" jdbcType="BIGINT"/>
                <result column="service_charge_money" property="money" jdbcType="INTEGER"/>
                <result column="service_charge_account_for" property="accountFor" jdbcType="VARCHAR"/>
                <result column="service_charge_item" property="item" jdbcType="VARCHAR"/>
             </resultMap>


            <resultMap id="BaseResultMap" type="com.idea.cjyl.totalmodule.web.domain.vo.OlderCostVO">
                <id column="older_cost_id" property="id" jdbcType="BIGINT"/>
                <result column="older_cost_service_charge_state" property="serviceChargeState" jdbcType="BIGINT"/>
                <result column="older_cost_service_charge_date" property="serviceChargeDate" jdbcType="TIMESTAMP"/>
                <result column="older_cost_close_an_account_date" property="closeAnAccountDate" jdbcType="TIMESTAMP"/>
                <result column="older_cost_organization_login_id" property="organizationLoginId" jdbcType="BIGINT"/>
                <result column="older_cost_service_charge_id" property="serviceChargeId" jdbcType="BIGINT"/>
                <result column="older_cost_service_charge_context" property="serviceChargeContext" jdbcType="VARCHAR"/>
                <result column="older_cost_older_id" property="olderId" jdbcType="BIGINT"/>
                <association property="older" resultMap="OlderOlderCostVO"></association>
                <association property="serviceCharge" resultMap="ServiceChargeOlderCostVO"></association>
             </resultMap>






        <sql id="Base_Column_List">
            older.id older_id, older.name older_name, older.principal_disease older_principal_disease, older.indication_hospital older_indication_hospital, older.census_register older_census_register, older.diseases_history older_diseases_history, older.take_care_of_oneself older_take_care_of_oneself, older.self_ingredient older_self_ingredient, older.abnormal_patterns older_abnormal_patterns, older.politics_status older_politics_status, older.indication_doctor older_indication_doctor, older.special_requirements older_special_requirements, older.older_leave_date older_older_leave_date, older.diet_characteristics older_diet_characteristics, older.organization_login_id older_organization_login_id, older.card_id older_card_id, older.blood_pressure older_blood_pressure, older.sex older_sex, older.check_in_date older_check_in_date, older.month_charge_id older_month_charge_id, older.tel older_tel, older.birthday older_birthday, older.belief older_belief, older.nation older_nation, older.mind older_mind, older.pluse older_pluse, older.older_state older_older_state, older.hospital_tel older_hospital_tel, older.staff_id older_staff_id, older.allergic_drug older_allergic_drug, older.disposition older_disposition, older.hobby older_hobby, service_charge.id service_charge_id, service_charge.organization_login_id service_charge_organization_login_id, service_charge.money service_charge_money, service_charge.account_for service_charge_account_for, service_charge.item service_charge_item, older_cost.id older_cost_id, older_cost.service_charge_state older_cost_service_charge_state, older_cost.service_charge_date older_cost_service_charge_date, older_cost.close_an_account_date older_cost_close_an_account_date, older_cost.organization_login_id older_cost_organization_login_id, older_cost.service_charge_id older_cost_service_charge_id, older_cost.service_charge_context older_cost_service_charge_context, older_cost.older_id older_cost_older_id
        </sql>



<sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>



        <select id="findAllVO" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"></include>
        from older_cost  LEFT JOIN service_charge ON older_cost.service_charge_id=service_charge.id  LEFT JOIN older ON older_cost.older_id=older.id  LEFT JOIN month_charge ON older.month_charge_id=month_charge.id  LEFT JOIN staff ON older.staff_id=staff.id 


        </select>

        <select id="findVOByExapmle" resultMap="BaseResultMap"
            parameterType="com.idea.cjyl.totalmodule.web.domain.pojo.OlderCostExample">


        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from older_cost  LEFT JOIN service_charge ON older_cost.service_charge_id=service_charge.id  LEFT JOIN older ON older_cost.older_id=older.id  LEFT JOIN month_charge ON older.month_charge_id=month_charge.id  LEFT JOIN staff ON older.staff_id=staff.id 

        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

     <select id="selectVOByPrimaryKey" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from older_cost  LEFT JOIN service_charge ON older_cost.service_charge_id=service_charge.id  LEFT JOIN older ON older_cost.older_id=older.id  LEFT JOIN month_charge ON older.month_charge_id=month_charge.id  LEFT JOIN staff ON older.staff_id=staff.id 
        WHERE older.id = #{id,jdbcType=BIGINT}
    </select>
</mapper>